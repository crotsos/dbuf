// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dbuf.proto

package dbuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetCurrentStateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCurrentStateRequest) Reset()         { *m = GetCurrentStateRequest{} }
func (m *GetCurrentStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetCurrentStateRequest) ProtoMessage()    {}
func (*GetCurrentStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60b6dc1b0941c986, []int{0}
}

func (m *GetCurrentStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCurrentStateRequest.Unmarshal(m, b)
}
func (m *GetCurrentStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCurrentStateRequest.Marshal(b, m, deterministic)
}
func (m *GetCurrentStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCurrentStateRequest.Merge(m, src)
}
func (m *GetCurrentStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetCurrentStateRequest.Size(m)
}
func (m *GetCurrentStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCurrentStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCurrentStateRequest proto.InternalMessageInfo

type GetCurrentStateResponse struct {
	MaximumBuffers       uint64   `protobuf:"varint,1,opt,name=maximum_buffers,json=maximumBuffers,proto3" json:"maximum_buffers,omitempty"`
	FreeBuffers          uint64   `protobuf:"varint,2,opt,name=free_buffers,json=freeBuffers,proto3" json:"free_buffers,omitempty"`
	MaximumMemory        uint64   `protobuf:"varint,3,opt,name=maximum_memory,json=maximumMemory,proto3" json:"maximum_memory,omitempty"`
	FreeMemory           uint64   `protobuf:"varint,4,opt,name=free_memory,json=freeMemory,proto3" json:"free_memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCurrentStateResponse) Reset()         { *m = GetCurrentStateResponse{} }
func (m *GetCurrentStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetCurrentStateResponse) ProtoMessage()    {}
func (*GetCurrentStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60b6dc1b0941c986, []int{1}
}

func (m *GetCurrentStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCurrentStateResponse.Unmarshal(m, b)
}
func (m *GetCurrentStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCurrentStateResponse.Marshal(b, m, deterministic)
}
func (m *GetCurrentStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCurrentStateResponse.Merge(m, src)
}
func (m *GetCurrentStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetCurrentStateResponse.Size(m)
}
func (m *GetCurrentStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCurrentStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCurrentStateResponse proto.InternalMessageInfo

func (m *GetCurrentStateResponse) GetMaximumBuffers() uint64 {
	if m != nil {
		return m.MaximumBuffers
	}
	return 0
}

func (m *GetCurrentStateResponse) GetFreeBuffers() uint64 {
	if m != nil {
		return m.FreeBuffers
	}
	return 0
}

func (m *GetCurrentStateResponse) GetMaximumMemory() uint64 {
	if m != nil {
		return m.MaximumMemory
	}
	return 0
}

func (m *GetCurrentStateResponse) GetFreeMemory() uint64 {
	if m != nil {
		return m.FreeMemory
	}
	return 0
}

type ReleasePacketsRequest struct {
	BufferId             uint64   `protobuf:"varint,1,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleasePacketsRequest) Reset()         { *m = ReleasePacketsRequest{} }
func (m *ReleasePacketsRequest) String() string { return proto.CompactTextString(m) }
func (*ReleasePacketsRequest) ProtoMessage()    {}
func (*ReleasePacketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60b6dc1b0941c986, []int{2}
}

func (m *ReleasePacketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleasePacketsRequest.Unmarshal(m, b)
}
func (m *ReleasePacketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleasePacketsRequest.Marshal(b, m, deterministic)
}
func (m *ReleasePacketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleasePacketsRequest.Merge(m, src)
}
func (m *ReleasePacketsRequest) XXX_Size() int {
	return xxx_messageInfo_ReleasePacketsRequest.Size(m)
}
func (m *ReleasePacketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleasePacketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleasePacketsRequest proto.InternalMessageInfo

func (m *ReleasePacketsRequest) GetBufferId() uint64 {
	if m != nil {
		return m.BufferId
	}
	return 0
}

type ReleasePacketsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleasePacketsResponse) Reset()         { *m = ReleasePacketsResponse{} }
func (m *ReleasePacketsResponse) String() string { return proto.CompactTextString(m) }
func (*ReleasePacketsResponse) ProtoMessage()    {}
func (*ReleasePacketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60b6dc1b0941c986, []int{3}
}

func (m *ReleasePacketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleasePacketsResponse.Unmarshal(m, b)
}
func (m *ReleasePacketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleasePacketsResponse.Marshal(b, m, deterministic)
}
func (m *ReleasePacketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleasePacketsResponse.Merge(m, src)
}
func (m *ReleasePacketsResponse) XXX_Size() int {
	return xxx_messageInfo_ReleasePacketsResponse.Size(m)
}
func (m *ReleasePacketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleasePacketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleasePacketsResponse proto.InternalMessageInfo

type SubscribeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60b6dc1b0941c986, []int{4}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

type Notification struct {
	// Types that are valid to be assigned to MessageType:
	//	*Notification_FirstBufferMessage
	MessageType          isNotification_MessageType `protobuf_oneof:"message_type"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_60b6dc1b0941c986, []int{5}
}

func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

type isNotification_MessageType interface {
	isNotification_MessageType()
}

type Notification_FirstBufferMessage struct {
	FirstBufferMessage *Notification_FirstBuffer `protobuf:"bytes,1,opt,name=first_buffer_message,json=firstBufferMessage,proto3,oneof"`
}

func (*Notification_FirstBufferMessage) isNotification_MessageType() {}

func (m *Notification) GetMessageType() isNotification_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (m *Notification) GetFirstBufferMessage() *Notification_FirstBuffer {
	if x, ok := m.GetMessageType().(*Notification_FirstBufferMessage); ok {
		return x.FirstBufferMessage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Notification) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Notification_FirstBufferMessage)(nil),
	}
}

type Notification_FirstBuffer struct {
	NewBufferId          uint32   `protobuf:"varint,1,opt,name=new_buffer_id,json=newBufferId,proto3" json:"new_buffer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notification_FirstBuffer) Reset()         { *m = Notification_FirstBuffer{} }
func (m *Notification_FirstBuffer) String() string { return proto.CompactTextString(m) }
func (*Notification_FirstBuffer) ProtoMessage()    {}
func (*Notification_FirstBuffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_60b6dc1b0941c986, []int{5, 0}
}

func (m *Notification_FirstBuffer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification_FirstBuffer.Unmarshal(m, b)
}
func (m *Notification_FirstBuffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification_FirstBuffer.Marshal(b, m, deterministic)
}
func (m *Notification_FirstBuffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification_FirstBuffer.Merge(m, src)
}
func (m *Notification_FirstBuffer) XXX_Size() int {
	return xxx_messageInfo_Notification_FirstBuffer.Size(m)
}
func (m *Notification_FirstBuffer) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification_FirstBuffer.DiscardUnknown(m)
}

var xxx_messageInfo_Notification_FirstBuffer proto.InternalMessageInfo

func (m *Notification_FirstBuffer) GetNewBufferId() uint32 {
	if m != nil {
		return m.NewBufferId
	}
	return 0
}

func init() {
	proto.RegisterType((*GetCurrentStateRequest)(nil), "dbuf.GetCurrentStateRequest")
	proto.RegisterType((*GetCurrentStateResponse)(nil), "dbuf.GetCurrentStateResponse")
	proto.RegisterType((*ReleasePacketsRequest)(nil), "dbuf.ReleasePacketsRequest")
	proto.RegisterType((*ReleasePacketsResponse)(nil), "dbuf.ReleasePacketsResponse")
	proto.RegisterType((*SubscribeRequest)(nil), "dbuf.SubscribeRequest")
	proto.RegisterType((*Notification)(nil), "dbuf.Notification")
	proto.RegisterType((*Notification_FirstBuffer)(nil), "dbuf.Notification.FirstBuffer")
}

func init() { proto.RegisterFile("dbuf.proto", fileDescriptor_60b6dc1b0941c986) }

var fileDescriptor_60b6dc1b0941c986 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcd, 0x8e, 0xd3, 0x30,
	0x14, 0x85, 0x09, 0x54, 0x88, 0xb9, 0x69, 0x3b, 0xc8, 0x82, 0xa1, 0xca, 0x94, 0x02, 0x91, 0x10,
	0x6c, 0x48, 0xa1, 0xb0, 0x61, 0x1b, 0x10, 0x3f, 0x42, 0xad, 0x50, 0xba, 0x63, 0x13, 0x25, 0xe9,
	0x75, 0x31, 0xe0, 0x38, 0xf8, 0x87, 0xd2, 0x07, 0x62, 0xc9, 0x63, 0xf1, 0x1e, 0x28, 0xb6, 0x5b,
	0xfa, 0xc7, 0x2e, 0x39, 0xfe, 0x4e, 0xae, 0xcf, 0xb9, 0x01, 0x58, 0x94, 0x86, 0x26, 0x8d, 0x14,
	0x5a, 0x90, 0x4e, 0xfb, 0x1c, 0x0f, 0xe0, 0xe2, 0x2d, 0xea, 0x57, 0x46, 0x4a, 0xac, 0xf5, 0x5c,
	0x17, 0x1a, 0x33, 0xfc, 0x6e, 0x50, 0xe9, 0xf8, 0x77, 0x00, 0x77, 0x8e, 0x8e, 0x54, 0x23, 0x6a,
	0x85, 0xe4, 0x11, 0x9c, 0xf3, 0xe2, 0x27, 0xe3, 0x86, 0xe7, 0xa5, 0xa1, 0x14, 0xa5, 0x1a, 0x04,
	0xf7, 0x83, 0xc7, 0x9d, 0xac, 0xef, 0xe5, 0xd4, 0xa9, 0xe4, 0x01, 0x74, 0xa9, 0x44, 0xdc, 0x52,
	0x57, 0x2d, 0x15, 0xb6, 0xda, 0x06, 0x79, 0x08, 0x1b, 0x53, 0xce, 0x91, 0x0b, 0xb9, 0x1e, 0x5c,
	0xb3, 0x50, 0xcf, 0xab, 0x53, 0x2b, 0x92, 0x7b, 0x60, 0x5d, 0x1b, 0xa6, 0x63, 0x19, 0x68, 0x25,
	0x07, 0xc4, 0x2f, 0xe0, 0x76, 0x86, 0xdf, 0xb0, 0x50, 0xf8, 0xb1, 0xa8, 0xbe, 0xa2, 0x56, 0x3e,
	0x08, 0xb9, 0x84, 0x33, 0x37, 0x3e, 0x67, 0x0b, 0x7f, 0xcd, 0x1b, 0x4e, 0x78, 0xbf, 0x68, 0xf3,
	0x1f, 0xba, 0x5c, 0xc6, 0x98, 0xc0, 0xcd, 0xb9, 0x29, 0x55, 0x25, 0x59, 0xb9, 0xed, 0xe4, 0x57,
	0x00, 0xdd, 0x99, 0xd0, 0x8c, 0xb2, 0xaa, 0xd0, 0x4c, 0xd4, 0x24, 0x83, 0x5b, 0x94, 0x49, 0xa5,
	0x7d, 0xc0, 0x9c, 0xa3, 0x52, 0xc5, 0x12, 0xed, 0x98, 0x70, 0x32, 0x4a, 0x6c, 0xdf, 0xbb, 0x8e,
	0xe4, 0x4d, 0x8b, 0xbb, 0xec, 0xef, 0xae, 0x64, 0x84, 0xfe, 0x7b, 0x9d, 0x3a, 0x6f, 0xf4, 0x0c,
	0xc2, 0x1d, 0x88, 0xc4, 0xd0, 0xab, 0x71, 0x95, 0xef, 0x47, 0xe8, 0x65, 0x61, 0x8d, 0xab, 0xd4,
	0xa7, 0x48, 0xfb, 0xd0, 0xf5, 0x93, 0x73, 0xbd, 0x6e, 0x70, 0xf2, 0x27, 0x80, 0xf0, 0x75, 0x69,
	0xe8, 0x1c, 0xe5, 0x0f, 0x56, 0x21, 0x99, 0xc1, 0xf9, 0xc1, 0x2a, 0xc9, 0xd0, 0xdd, 0xed, 0xf4,
	0xf2, 0xa3, 0xbb, 0xff, 0x39, 0xf5, 0xfb, 0xff, 0x00, 0xfd, 0xfd, 0xd6, 0xc8, 0xa5, 0x33, 0x9c,
	0xdc, 0x40, 0x34, 0x3c, 0x7d, 0xe8, 0x3f, 0xf6, 0x12, 0xce, 0xb6, 0x45, 0x93, 0x0b, 0x87, 0x1e,
	0x36, 0x1f, 0x91, 0xe3, 0x2a, 0x9f, 0x06, 0xe9, 0xe8, 0xd3, 0x70, 0xc9, 0xf4, 0x67, 0x53, 0x26,
	0x95, 0xe0, 0x63, 0xc1, 0xb1, 0x7a, 0xd2, 0x48, 0xf1, 0x05, 0x2b, 0x3d, 0x6e, 0xf1, 0xf2, 0xba,
	0xfd, 0xd5, 0x9f, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x38, 0xd7, 0x4b, 0xf8, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DbufServiceClient is the client API for DbufService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DbufServiceClient interface {
	GetCurrentState(ctx context.Context, in *GetCurrentStateRequest, opts ...grpc.CallOption) (*GetCurrentStateResponse, error)
	ReleasePackets(ctx context.Context, in *ReleasePacketsRequest, opts ...grpc.CallOption) (*ReleasePacketsResponse, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (DbufService_SubscribeClient, error)
}

type dbufServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDbufServiceClient(cc grpc.ClientConnInterface) DbufServiceClient {
	return &dbufServiceClient{cc}
}

func (c *dbufServiceClient) GetCurrentState(ctx context.Context, in *GetCurrentStateRequest, opts ...grpc.CallOption) (*GetCurrentStateResponse, error) {
	out := new(GetCurrentStateResponse)
	err := c.cc.Invoke(ctx, "/dbuf.DbufService/GetCurrentState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dbufServiceClient) ReleasePackets(ctx context.Context, in *ReleasePacketsRequest, opts ...grpc.CallOption) (*ReleasePacketsResponse, error) {
	out := new(ReleasePacketsResponse)
	err := c.cc.Invoke(ctx, "/dbuf.DbufService/ReleasePackets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dbufServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (DbufService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DbufService_serviceDesc.Streams[0], "/dbuf.DbufService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &dbufServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DbufService_SubscribeClient interface {
	Recv() (*Notification, error)
	grpc.ClientStream
}

type dbufServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *dbufServiceSubscribeClient) Recv() (*Notification, error) {
	m := new(Notification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DbufServiceServer is the server API for DbufService service.
type DbufServiceServer interface {
	GetCurrentState(context.Context, *GetCurrentStateRequest) (*GetCurrentStateResponse, error)
	ReleasePackets(context.Context, *ReleasePacketsRequest) (*ReleasePacketsResponse, error)
	Subscribe(*SubscribeRequest, DbufService_SubscribeServer) error
}

// UnimplementedDbufServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDbufServiceServer struct {
}

func (*UnimplementedDbufServiceServer) GetCurrentState(ctx context.Context, req *GetCurrentStateRequest) (*GetCurrentStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentState not implemented")
}
func (*UnimplementedDbufServiceServer) ReleasePackets(ctx context.Context, req *ReleasePacketsRequest) (*ReleasePacketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleasePackets not implemented")
}
func (*UnimplementedDbufServiceServer) Subscribe(req *SubscribeRequest, srv DbufService_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterDbufServiceServer(s *grpc.Server, srv DbufServiceServer) {
	s.RegisterService(&_DbufService_serviceDesc, srv)
}

func _DbufService_GetCurrentState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbufServiceServer).GetCurrentState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbuf.DbufService/GetCurrentState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbufServiceServer).GetCurrentState(ctx, req.(*GetCurrentStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DbufService_ReleasePackets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleasePacketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbufServiceServer).ReleasePackets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbuf.DbufService/ReleasePackets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbufServiceServer).ReleasePackets(ctx, req.(*ReleasePacketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DbufService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DbufServiceServer).Subscribe(m, &dbufServiceSubscribeServer{stream})
}

type DbufService_SubscribeServer interface {
	Send(*Notification) error
	grpc.ServerStream
}

type dbufServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *dbufServiceSubscribeServer) Send(m *Notification) error {
	return x.ServerStream.SendMsg(m)
}

var _DbufService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dbuf.DbufService",
	HandlerType: (*DbufServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCurrentState",
			Handler:    _DbufService_GetCurrentState_Handler,
		},
		{
			MethodName: "ReleasePackets",
			Handler:    _DbufService_ReleasePackets_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _DbufService_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "dbuf.proto",
}
